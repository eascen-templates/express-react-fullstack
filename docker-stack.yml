
services:

  db:
    image: postgres:16
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/data/db
    expose:
      - "5432"

  db-migrations:
    image: ghcr.io/eascen-templates/template-image-migrations:${GIT_COMMIT_HASH:-latest}
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      - db

  api:
    image: ghcr.io/eascen-templates/template-image-api:${GIT_COMMIT_HASH:-latest}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.${DOMAIN_NAME}`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.services.example-api.loadbalancer.server.port=4004"
    env_file: ./api/.env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - APP_ORIGIN=https://${DOMAIN_NAME}
    depends_on:
      - db
      - db-migrations

  client:
    image: ghcr.io/eascen-templates/template-image-client:${GIT_COMMIT_HASH:-latest}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.tls.certresolver=myresolver"
    depends_on:
      - api

  reverse-proxy:
    image: traefik:v3.1
    # Enables the web UI and tells Traefik to listen to docker
    command: 
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      # Certificate provider/resolver
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=eascen@${DOMAIN_NAME}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      # HTTPS address
      - "--entrypoints.websecure.address=:443"
      # HTTP address
      - "--entrypoints.web.address=:80"
      # Redirect HTTP to HTTPS
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      # The HTTP port
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      # The HTTPS port
      - mode: host
        protocol: tcp
        published: 443
        target: 443
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - api
      - client
  
volumes:
  pg_data:
  letsencrypt: