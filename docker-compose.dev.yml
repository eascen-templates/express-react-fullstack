name: template-dev-example

services:

  db:
    image: postgres:16
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/data/db
    networks:
      -  template-example
    ports:
      - 5432:5432

  api:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.${DOMAIN_NAME}`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls=true"
    build: 
      context: ./api
      target: development
    restart: unless-stopped
    env_file: ./api/.env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - APP_ORIGIN=https://${DOMAIN_NAME}
    volumes:
      - ./api:/app
    networks:
      -  template-example
    ports:
      - 4004:4004
    depends_on:
      - db
    command: sh -c "npm run db:migrate && npm run dev"

  client:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.tls=true"
    build: 
      context: ./client
      target: development
      args: 
        - VITE_API_URL=https://api.${DOMAIN_NAME}
    restart: unless-stopped
    env_file: ./client/.env
    volumes:
      - ./client:/app
    networks:
      -  template-example
    ports:
      - 5173:5173
    depends_on:
      - api

  reverse-proxy:
    image: traefik:v3.1
    # Enables the web UI and tells Traefik to listen to docker
    command: 
      - "--api.insecure=true" 
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.filename=/dynamic/traefik.yaml"
      - "--entrypoints.websecure.address=:443"
      # Redirect HTTP to HTTPS
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      # The HTTP port
      - "80:80"
      # The HTTPS port
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      - ./traefik/certs:/certs
      - ./traefik/traefik_dev.dynamic.yaml:/dynamic/traefik.yaml
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - template-example
    depends_on:
      - api
      - client
  
volumes:
  pg_data:
  
networks:
  template-example:
    driver: bridge